// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  Male
  Female
  Other
}

enum Status {
  Active
  Inactive
}

enum RoleType {
  Admin
  HR
  SuperAdmin
}
model User {
  id    Int     @default(autoincrement()) @id
  email String  @unique
  firstName  String
  lastName  String
  middleName  String?
  username String
  designation String
  phone String
  photoUrl String
  gender Gender
  dob DateTime

  password String

  userTenant UserTenant?

  // ======== COMMOM COLUMN ======= //
  createdAt  DateTime   @default(now())
  modifiedAt DateTime   @default(now())
  createdBy String?
  modifiedBy String?
  // ======== COMMOM COLUMN ======= //

}


model Role {
  id    Int     @default(autoincrement()) @id
  name String
  roleType RoleType
  permissions String[]
  userTenants UserTenant[]

  // ======== COMMOM COLUMN ======= //
  createdAt  DateTime   @default(now())
  modifiedAt DateTime   @default(now())
  createdBy String?
  modifiedBy String?
  // ======== COMMOM COLUMN ======= //
}

model Tenant {
  id    Int     @default(autoincrement()) @id
  name String
  status Status
  address String?
  state String?
  zip String?
  city String?
  country String?
  primaryContactEmail String
  allowedDomain String
  tenantType String
  userTenants UserTenant[]

  // ======== COMMOM COLUMN ======= //
  createdAt  DateTime   @default(now())
  modifiedAt DateTime   @default(now())
  createdBy String?
  modifiedBy String?
  // ======== COMMOM COLUMN ======= //
}

model UserTenant {
  id    Int     @default(autoincrement()) @id
  status Status
  user User @relation(fields: [userId], references: [id])
  userId Int @unique

  tenant Tenant @relation(fields: [tenantId], references: [id])
  tenantId Int @unique

  role Role @relation(fields: [roleId], references: [id])
  roleId Int @unique


  // ======== COMMOM COLUMN ======= //
  createdAt  DateTime   @default(now())
  modifiedAt DateTime   @default(now())
  createdBy String?
  modifiedBy String?
  // ======== COMMOM COLUMN ======= //
}

